
{
    "swagger": "2.0",
    "info": {
        "version": "0.0.1-SNAPSHOT",
        "title": "APIfit"
    },
    "basePath": "/APIfit/",
    "schemes": [
        "http"
    ],
    "paths": {
        "/": {
            "get": {
            	"summary": "Home page",
                "description": "Displaying of home page",
                "consumes": [
                ],
                "produces": [
                    "text/plain"
                ],
                "parameters": [
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {
                        },
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/challenge": {
            "get": {
            	"summary":"Get challenges",
                "description": "Return all challenges from the database",
                "consumes": [
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {
                        },
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
            	"summary": "Create challenge",
                "description": "Insert a challenge in the database",
                "consumes": [
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "name": "desc",
                        "in": "query",
                        "required": true,
                        "description": "(description query parameter)"
                    },
                    {
                        "type": "string",
                        "name": "name",
                        "in": "query",
                        "required": true,
                        "description": "(challenge name query parameter)"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {
                        },
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/challenge/{chalId}": {
            "get": {
            	"summary": "Get challenge",
                "description": "Return a specific challenge from the database with a chalId",
                "consumes": [
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "type": "integer",
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "(challenge id)"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {
                        },
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
            	"summary":"Edit challenge",
                "description": "Edit the parameter of a specific challenge in the database",
                "consumes": [
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "type": "integer",
                        "name": "chalId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "name": "players",
                        "in": "query",
                        "required": true,
                        "description": "(max players number query parameter)"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {
                        },
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/challenge/{chalId}/ppassage": {
            "post": {
            	"summary": "Create PPassage",
                "description": "Insert a PPassage in a challenge PPassage list in the database",
                "consumes": [
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "type": "integer",
                        "name": "chalId",
                        "in": "path",
                        "required": true,
                        "description": "(the challenge id path parameter)"
                    },
                    {
                        "type": "string",
                        "name": "name",
                        "in": "query",
                        "required": true,
                        "description": "(the name of PPassage query parameter)"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {
                        },
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/challenge/{chalId}/ppassage/{ppId}": {
            "get": {
            	"summary": "Get a PPassage",
                "description": "Return a specific PPassage on a specific challenge from database",
                "consumes": [
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "type": "integer",
                        "name": "chalId",
                        "in": "path",
                        "required": true,
                        "description": "(the challenge id path parameter)"
                    },
                    {
                        "type": "integer",
                        "name": "ppId",
                        "in": "path",
                        "required": true,
                        "description": "(the PPassage id path parameter)"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {
                        },
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
            	"summary": "Delete PPassage",
                "description": "Remove a specific PPassage in a specific challenge from database and return remaining PPassage",
                "consumes": [
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "type": "integer",
                        "name": "chalId",
                        "in": "path",
                        "required": true,
                        "description": "(the challenge id path parameter)"
                    },
                    {
                        "type": "integer",
                        "name": "ppId",
                        "in": "path",
                        "required": true,
                        "description": "(the pp id path parameter)"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {
                        },
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/challenge/{chalId}/segment": {
            "post": {
            	"summary": "Create segment",
                "description": "Insert a new segment in a challenge segment list from database",
                "consumes": [
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "type": "integer",
                        "name": "chalId",
                        "in": "path",
                        "required": true,
                        "description": "(the challenge id path parameter)"
                    },
                    {
                        "type": "integer",
                        "name": "dist",
                        "in": "query",
                        "required": true,
                        "description": "(the dist query parameter)"
                    },
                    {
                        "type": "string",
                        "name": "name",
                        "in": "query",
                        "required": true,
                        "description": "(the segment name query parameter)"
                    },
                    {
                        "type": "integer",
                        "name": "ppApId",
                        "in": "query",
                        "required": true,
                        "description": "(the next PP id query parameter)"
                    },
                    {
                        "type": "integer",
                        "name": "ppAvId",
                        "in": "query",
                        "required": true,
                        "description": "(the previous PP id query parameter)"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {
                        },
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/challenge/{chalId}/segment/{segId}": {
            "get": {
            	"summary": "Get segment",
                "description": "Return a specific segment on a specific challenge from database",
                "consumes": [
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "type": "integer",
                        "name": "chalId",
                        "in": "path",
                        "required": true,
                        "description": "(the challenge id path parameter)"
                    },
                    {
                        "type": "integer",
                        "name": "segId",
                        "in": "path",
                        "required": true,
                        "description": "(the segment id path parameter)"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {
                        },
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
            	"summary": "Delete segment",
                "description": "Remove a specific segment on a specific challenge from database",
                "consumes": [
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "type": "integer",
                        "name": "chalId",
                        "in": "path",
                        "required": true,
                        "description": "(the challenge id path parameter)"
                    },
                    {
                        "type": "integer",
                        "name": "segId",
                        "in": "path",
                        "required": true,
                        "description": "(the segment id path parameter)"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {
                        },
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/challenge/{chalId}/segment/{segId}/obstacle": {
            "get": {
            	"summary": "Get obstacle",
                "description": "Return the obstacle on a specific segment on a specific challenge",
                "consumes": [
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "type": "integer",
                        "name": "chalId",
                        "in": "path",
                        "required": true,
                        "description": "(the challenge id path parameter)"
                    },
                    {
                        "type": "integer",
                        "name": "segId",
                        "in": "path",
                        "required": true,
                        "description": "(the segment id path parameter)"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {
                        },
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
            	"summary": "Create obstacle",
                "description": "Insert an obstacle on a specific segment on a specific challenge",
                "consumes": [
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "type": "integer",
                        "name": "chalId",
                        "in": "path",
                        "required": true,
                        "description": "(the challenge id path parameter)"
                    },
                    {
                        "type": "integer",
                        "name": "segId",
                        "in": "path",
                        "required": true,
                        "description": "(the segment id path parameter)"
                    },
                    {
                        "type": "string",
                        "name": "description",
                        "in": "query",
                        "required": true,
                        "description": "(the obstacle description query parameter)"
                    },
                    {
                        "type": "integer",
                        "name": "dist",
                        "in": "query",
                        "required": true,
                        "description": "(the obstacle distance on the segment query parameter)"
                    },
                    {
                        "type": "string",
                        "name": "name",
                        "in": "query",
                        "required": true,
                        "description": "(the obstacle name query parameter)"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {
                        },
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
            	"summary": "Delete obstacle",
                "description": "Remove an obstacle on a specific segment on a specific challenge from database",
                "consumes": [
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "type": "integer",
                        "name": "chalId",
                        "in": "path",
                        "required": true,
                        "description": "(the challenge id path parameter)"
                    },
                    {
                        "type": "integer",
                        "name": "segId",
                        "in": "path",
                        "required": true,
                        "description": "(the segment id path parameter)"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {
                        },
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/challenge/{chalId}/subscribe": {
            "post": {
            	"summary": "Subscribe challenge",
                "description": "Insert a specific challenge Id in the User challenge Id list",
                "consumes": [
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "type": "integer",
                        "name": "chalId",
                        "in": "path",
                        "required": true,
                        "description": "(id of challenge to subscribe to)"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {
                        },
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/profile": {
            "get": {
            	"summary": "Get profile",
                "description": "Return the profile of the connected user from database",
                "consumes": [
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {
                        },
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
            	"summary": "Edit profile",
                "description": "Edit the user informations from database",
                "consumes": [
                ],
                "produces": [
                    "text/plain"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "name": "password",
                        "in": "query",
                        "required": true,
                        "description": "(password query parameter)"
                    },
                    {
                        "type": "string",
                        "name": "username",
                        "in": "query",
                        "required": true,
                        "description": "(username query parameter)"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {
                        },
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
            	"summary": "Delete profile",
                "description": "Remove the profile of connected user from database",
                "consumes": [
                ],
                "produces": [
                    "text/plain"
                ],
                "parameters": [
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {
                        },
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/profile/progression": {
            "get": {
            	"summary": "Get progression",
                "description": "Return all challenges that the user is subscribed to from database",
                "consumes": [
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {
                        },
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/signin": {
            "put": {
            	"summary": "Sign in",
                "description": "Check if username and password are stored in database to sign in",
                "consumes": [
                ],
                "produces": [
                    "text/plain"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "name": "password",
                        "in": "query",
                        "required": true,
                        "description": "(password query parameter)"
                        },
                    {
                        "type": "string",
                        "name": "username",
                        "in": "query",
                        "required": true,
                        "description": "(username query parameter)"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {
                        },
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/signout": {
            "put": {
            	"summary": "Sign out",
                "description": "Disconnect the connected user",
                "consumes": [
                ],
                "produces": [
                    "text/plain"
                ],
                "parameters": [
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {
                        },
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/signup": {
            "post": {
            	"summary": "Create account",
                "description": "Insert an username and a password in database to create an user",
                "consumes": [
                ],
                "produces": [
                    "text/plain"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "name": "password",
                        "in": "query",
                        "required": true,
                        "description": "(password query parameter)"
                    },
                    {
                        "type": "string",
                        "name": "username",
                        "in": "query",
                        "required": true,
                        "description": "(username query parameter)"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {
                        },
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/suggestion": {
            "get": {
            	"summary": "Get suggestions",
                "description": "Return all suggestions from database",
                "consumes": [
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {
                        },
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
            	"summary": "Create a suggestion",
                "description": "Insert a suggestion in database",
                "consumes": [
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "name": "theme",
                        "in": "query",
                        "required": true,
                        "description": "(theme query parameter)"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {
                        },
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/user": {
            "get": {
            	"summary": "Get users",
                "description": "Return all users form database",
                "consumes": [
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {
                        },
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/user/{userId}": {
            "get": {
            	"summary": "Get user",
                "description": "Return a specific user",
                "consumes": [
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "type": "integer",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {
                        },
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
            	"summary": "Edit user",
                "description": "Edit the user informations in database",
                "consumes": [
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "type": "integer",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "password",
                        "in": "query",
                        "required": true,
                        "description": "(password query parameter)"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {
                        },
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
            	"summary": "Delete user",
                "description": "Remove a specific user from database",
                "consumes": [
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "type": "integer",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {
                        },
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
    }
}